#!/usr/bin/env python
import os

Import('build')

env = build.env.Clone();
env.Append(CPPDEFINES = ('TITANIUM_PROCESS_API_EXPORT', 1))
env.Append(CPPPATH = ['#kroll'])
build.add_thirdparty(env, 'poco')

sources = ['process_binding.cpp', 'process_module.cpp']

if build.is_osx():
	sources = sources + Glob('osx/*.mm') + Glob('osx/*.cpp')
	env.Append(CCFLAGS=['-x', 'objective-c++'])
elif build.is_win32():
	sources = sources + Glob('win32/*.cpp')
else:
	sources += ['process.cpp', 'pipe.cpp']
	
m = build.add_module('ti.Process', env=env)
t = env.SharedLibrary(target = m.build_dir + '/tiprocessmodule', source = sources)
build.mark_build_target(t)
